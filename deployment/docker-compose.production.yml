version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: gravity-redis
    restart: unless-stopped
    ports:
      - "16379:6379"
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_data:/data
    networks:
      - gravity-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # API service
  api:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: gravity-api
    restart: unless-stopped
    ports:
      - "18001:8000"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DOWNLOADS_PATH: /opt/gravity/downloads
      TEMP_PATH: /opt/gravity/temp
      DEBUG: "false"
      LOG_LEVEL: INFO
    volumes:
      - downloads_data:/opt/gravity/downloads
      - temp_data:/opt/gravity/temp
      - logs_data:/opt/gravity/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - gravity-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Celery worker service
  worker:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: gravity-worker
    restart: unless-stopped
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DOWNLOADS_PATH: /opt/gravity/downloads
      TEMP_PATH: /opt/gravity/temp
      DEBUG: "false"
      LOG_LEVEL: INFO
    volumes:
      - downloads_data:/opt/gravity/downloads
      - temp_data:/opt/gravity/temp
      - logs_data:/opt/gravity/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - gravity-network
    command: ["python", "worker.py"]
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Celery beat service
  beat:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: gravity-beat
    restart: unless-stopped
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DOWNLOADS_PATH: /opt/gravity/downloads
      TEMP_PATH: /opt/gravity/temp
      DEBUG: "false"
      LOG_LEVEL: INFO
    volumes:
      - downloads_data:/opt/gravity/downloads
      - temp_data:/opt/gravity/temp
      - logs_data:/opt/gravity/logs
      - beat_data:/opt/gravity/beat
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - gravity-network
    command: ["python", "beat.py"]
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend service
  frontend:
    image: nginx:alpine
    container_name: gravity-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ../frontend:/usr/share/nginx/html:ro
      - ./nginx-simple.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      api:
        condition: service_healthy
    networks:
      - gravity-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  redis_data:
    driver: local
  downloads_data:
    driver: local
  temp_data:
    driver: local
  logs_data:
    driver: local
  beat_data:
    driver: local

networks:
  gravity-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16