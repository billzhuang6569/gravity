# Docker Compose configuration for Gravity Video Downloader
version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: gravity-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-gravitysecret}
    volumes:
      - redis_data:/data
    networks:
      - gravity-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API service
  api:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: gravity-api
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-gravitysecret}
      - DOWNLOADS_PATH=/opt/gravity/downloads
      - TEMP_PATH=/opt/gravity/temp
      - DEBUG=false
    volumes:
      - downloads_data:/opt/gravity/downloads
      - temp_data:/opt/gravity/temp
      - logs_data:/opt/gravity/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - gravity-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker service
  worker:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: gravity-worker
    restart: unless-stopped
    command: python worker.py
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-gravitysecret}
      - DOWNLOADS_PATH=/opt/gravity/downloads
      - TEMP_PATH=/opt/gravity/temp
      - DEBUG=false
    volumes:
      - downloads_data:/opt/gravity/downloads
      - temp_data:/opt/gravity/temp
      - logs_data:/opt/gravity/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - gravity-network
    healthcheck:
      test: ["CMD", "python", "-c", "import celery; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery beat service (定时任务)
  beat:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: gravity-beat
    restart: unless-stopped
    command: python beat.py
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-gravitysecret}
      - DOWNLOADS_PATH=/opt/gravity/downloads
      - TEMP_PATH=/opt/gravity/temp
      - DEBUG=false
    volumes:
      - downloads_data:/opt/gravity/downloads
      - temp_data:/opt/gravity/temp
      - logs_data:/opt/gravity/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - gravity-network

  # Frontend service
  frontend:
    image: nginx:alpine
    container_name: gravity-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../frontend:/usr/share/nginx/html/app
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL 证书目录
    depends_on:
      - api
    networks:
      - gravity-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  downloads_data:
    driver: local
  temp_data:
    driver: local
  logs_data:
    driver: local

networks:
  gravity-network:
    driver: bridge